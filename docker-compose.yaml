version: '3.8'

networks:
  internal:
  web:
    # Override the network name.
    # When not external, it makes docker use this name instead of automatically created project-scoped version
    # We need the explicitliy named network for use with "traefik.docker.network" label
    name: web-public
    external: false # Do ot expect external web network in developmet

services:
  traefik:
    image: traefik:v2.4
    command:
      - --log.level=DEBUG
      - --log.format=common
      - --providers.docker=true
      - --providers.docker.swarmmode=false
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --api.insecure=true
    ports:
      - 80:80
      - 8080:8080
    labels:
      - 'traefik.docker.network=web-public'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web

  db:
    image: postgres:13.2-alpine
    restart: always
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dev
    ports:
      - 5432:5432
    networks:
      - internal

  api:
    build:
      context: api
    networks:
      - web
      - internal
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dev
      POSTGRES_HOST: db
      PORT: 4000
    volumes:
      - ./api:/app
    ports:
      - 9229 # Debugger
    depends_on:
      db:
        condition: service_healthy
    labels:
      traefik.enable: 'true'
      # Path will override other possible localhost/api endpoints
      traefik.http.routers.node-api.rule: 'Host(`localhost`) && PathPrefix(`/api`)'
      traefik.http.routers.node-api.entrypoints: web
      traefik.docker.network: web-public
      traefik.http.services.node-api.loadbalancer.server.port: 4000
      # Define and apply prefix-strip middleware. Hitting localhost/api will return api service / home route
      traefik.http.middlewares.node-api-stripprefix.stripprefix.prefixes: /api
      traefik.http.routers.node-api.middlewares: node-api-stripprefix@docker
    restart: unless-stopped
    # Eable colorized logs
    tty: true
    stdin_open: false

  webclient:
    build:
      context: web
    volumes:
      - ./web:/app
    networks:
      - web
    labels:
      traefik.enable: 'true'
      traefik.http.routers.webclient.rule: Host(`localhost`)
      traefik.http.routers.webclient.entrypoints: web
      traefik.docker.network: web-public
      traefik.http.services.webclient.loadbalancer.server.port: 3000
    restart: unless-stopped
    # Eable colorized logs
    tty: true
    stdin_open: false
